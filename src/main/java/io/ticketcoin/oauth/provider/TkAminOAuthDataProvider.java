package io.ticketcoin.oauth.provider;
import java.util.List;

import org.apache.cxf.rs.security.oauth2.common.Client;
import org.apache.cxf.rs.security.oauth2.common.OAuthPermission;
import org.apache.cxf.rs.security.oauth2.common.ServerAccessToken;
import org.apache.cxf.rs.security.oauth2.common.UserSubject;
import org.apache.cxf.rs.security.oauth2.provider.DefaultEHCacheOAuthDataProvider;
import org.apache.cxf.rs.security.oauth2.provider.OAuthServiceException;
import org.apache.cxf.rs.security.oauth2.tokens.refresh.RefreshToken;
import org.apache.cxf.rs.security.oauth2.utils.OAuthConstants;
 
public class TkAminOAuthDataProvider extends DefaultEHCacheOAuthDataProvider {
 
	public TkAminOAuthDataProvider()
	{
		super();
		Client c = new Client("admin", "admin", true);
		setClient(c);
		setAccessTokenLifetime(3600);
		setRefreshTokenLifetime(3600*24*90);
		getPermissionMap().put(OAuthConstants.REFRESH_TOKEN_SCOPE, new OAuthPermission(OAuthConstants.REFRESH_TOKEN_SCOPE));
	}
	@Override
		public Client getClient(String clientId) throws OAuthServiceException {
			System.out.println(clientId);
			return super.getClient(clientId);
		}
	
		@Override
		public List<Client> getClients(UserSubject resourceOwner) {
			// TODO Autogenerated method stub
			return super.getClients(resourceOwner);
		}
	
		@Override
		public List<ServerAccessToken> getAccessTokens(Client c, UserSubject sub) {
			// TODO Autogenerated method stub
			return super.getAccessTokens(c, sub);
		}
	
		@Override
		public List<RefreshToken> getRefreshTokens(Client c, UserSubject sub) {
			// TODO Autogenerated method stub
			return super.getRefreshTokens(c, sub);
		}
	
		@Override
		public ServerAccessToken getAccessToken(String accessToken) throws OAuthServiceException {
			// TODO Autogenerated method stub
			return super.getAccessToken(accessToken);
		}
	
}